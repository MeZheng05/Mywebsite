[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mywebsite",
    "section": "",
    "text": "Hi! Welcome to my website. My name is Meilin Zheng. I currently a freelance data analyst, focusing on healthcare and biomedical sciences. I got my master degree from the Biostatistics department at Johns Hopkins University in May 2025.\nI bring rigorous analytical training and cutting-edge technical skills to:"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Education\nJohns Hopkins University, MHS in Biostatistics Aug 2023 - May 2025\nUniversity of New Mexico, BS in Statistics; BA in Economics Aug 2019 - May 2023\n\n\nExpertise\n\n\nProjects Completed\n{r}\nlibrary(ggplot2)\ndata &lt;- data.frame(\n  field = c(\"Clinical Trials\", \"Epidemiology\", \"Real World Evidence (RWE)\"),\n  projects = c(12, 8, 5)\n)\nggplot(data, aes(field, projects, fill=field)) + \n  geom_col(show.legend=FALSE) +\n  labs(x=NULL, y=\"Projects Completed\") +\n  theme_minimal()\n\n\n\nEcademic Publications\nlink to this publication"
  },
  {
    "objectID": "Analysis1.html",
    "href": "Analysis1.html",
    "title": "Analysis1",
    "section": "",
    "text": "The purpose of this analysis is to explore the relationship between age (in months) and weight (in kilogram) among 185 infants aged 0 to 60 months in Nepal."
  },
  {
    "objectID": "Analysis1.html#a-visualization-on-the-trend-of-weight-as-age-in-months-increases",
    "href": "Analysis1.html#a-visualization-on-the-trend-of-weight-as-age-in-months-increases",
    "title": "Analysis1",
    "section": "A Visualization on the Trend of Weight as Age in Months Increases",
    "text": "A Visualization on the Trend of Weight as Age in Months Increases\n\n# Kernel smooth \nks.fit &lt;- with(nepalantro, ksmooth(age,wt, bandwidth=20))\n# Plot\nggplot(data=nepalantro, aes(x=age,y=wt)) + \n  geom_point(aes(color=as.factor(sex)), position=position_jitter(width=0.1,height=0.1),alpha=0.7) +\n  geom_smooth(aes(linetype=\"ns\"),method=\"lm\", formula=y~ splines::ns(x,3),se=FALSE) +\n  geom_smooth(aes(linetype=\"loess\"),method=\"loess\",span=0.5,se=FALSE) +\n  geom_line(aes(x=age,y=ks.fit$y,linetype=\"kernel\"))+\n  labs(x=\"Age(months)\",y=\"Weight(kg)\",title=\"Nepali Children Study\") +\n  scale_colour_manual(name=\"Gender\",values=c(\"1\"=\"red\",\"2\"=\"green\"), labels=c(\"Male\",\"Female\")) +\n  scale_linetype_manual(name=\"Smoothing\", values= c(ns=\"dotted\",loess=\"dashed\",kernel=\"longdash\")) +\n  theme_bw() +\n  theme(plot.title= element_text(hjust=0.5)) +\n  scale_x_continuous(breaks=seq(0,60,6),limits=c(0,60))\n\n\n\n\n\n\n\n#pick three ages, 6, 30, 60, calculate mean weight\nsetDT(nepalantro)\nresult &lt;- nepalantro[age %in% c(12, 36, 60), .(Mean_Weight = mean(wt, na.rm = TRUE), Sd_Weight = sd(wt, na.rm = TRUE)), by = age] # . means make a list \nprint(result)\n\n     age Mean_Weight Sd_Weight\n   &lt;num&gt;       &lt;num&gt;     &lt;num&gt;\n1:    12    6.914286 1.0838644\n2:    36   11.025000 1.5452693\n3:    60   12.150000 0.3535534"
  },
  {
    "objectID": "Analysis1.html#a-summary-on-the-trend-of-weigth-by-sex",
    "href": "Analysis1.html#a-summary-on-the-trend-of-weigth-by-sex",
    "title": "Analysis1",
    "section": "A Summary on the Trend of Weigth by Sex",
    "text": "A Summary on the Trend of Weigth by Sex\n\nggplot(data=nepalantro, aes(x=age,y=wt,color = as.factor(sex))) + \n  geom_point(aes(color=as.factor(sex)), position=position_jitter(width=0.1,height=0.1),alpha=0.7) +\n  geom_smooth(method = \"loess\", span = 0.5, se = FALSE) + \n  labs(x=\"Age(months)\",y=\"Weight(kg)\",title=\"Nepali Children Study\") +\n  scale_colour_manual(name=\"Gender\",values=c(\"1\"=\"red\",\"2\"=\"green\"), labels=c(\"Male\",\"Female\")) +\n  theme_bw() +\n  theme(plot.title= element_text(hjust=0.5)) +\n  scale_x_continuous(breaks=seq(0,60,6),limits=c(0,60))\n\n\n\n\n\n\n\nsetDT(nepalantro)\nresult &lt;- nepalantro[age %in% c(12, 36, 60), .(Mean_wt = mean(wt)), by = .(sex, age)]\nprint(result)\n\n     sex   age   Mean_wt\n   &lt;num&gt; &lt;num&gt;     &lt;num&gt;\n1:     2    12  7.283333\n2:     1    12  4.700000\n3:     2    36 11.033333\n4:     1    36 11.020000\n5:     1    60 12.150000"
  },
  {
    "objectID": "Analysis1.html#simple-linear-regression",
    "href": "Analysis1.html#simple-linear-regression",
    "title": "Analysis1",
    "section": "Simple Linear Regression",
    "text": "Simple Linear Regression\n\nslr &lt;- lm(wt ~ I(age - 12), nepalantro)\nggplot(data = nepalantro, aes(x = age, y = wt)) + geom_point(aes(color = as.factor(sex)),\n position = position_jitter(width = 0.1, height = 0.1), alpha = 0.7 ) +\n geom_smooth(aes(linetype = \"slr\"), method=\"lm\", col=\"black\", span = 0.5, se = FALSE) +\n geom_smooth(aes(linetype = \"ns\"), method = \"lm\", formula = y ~ splines::ns(x,3), se = FALSE) +\n geom_smooth(aes(linetype = \"loess\"), method = \"loess\", span = 0.5, se = FALSE) +\n geom_line(aes(x = age, y = ks.fit$y, linetype = \"kernel\")) +\n labs(x = \"Age (months)\", y = \"Weight (kg)\", title = \"Nepali Children Study\") + # modify axis,title\n scale_colour_manual(name = \"Gender\",\n values = c(\"1\" = \"red\", \"2\" = \"green\"),\n labels = c(\"Male\", \"Female\")) +\n scale_linetype_manual(name=\"Smoothing\", values = c(ns=\"dotted\",loess=\"dashed\",kernel=\"longdash\", slr = \"solid\")) +\n theme_bw() +\n theme(plot.title = element_text(hjust = 0.5)) +\n scale_x_continuous(breaks=seq(0,60,6),limits=c(0,60))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThe simple linear regression over-estimates weight for children under 6 months and under-estimates weight for children above 51 months.The simple linear regression also has an assumption of equal variances, meaning that the variation of weight should be roughly the same across different ages. However, as age increases, the variation in observed weights for a given age increases. Therefore, the simple linear regression is not a good option to accuratly model the weight-age association."
  },
  {
    "objectID": "Analysis1.html#multiple-linear-regression-with-linear-and-cubic-splines",
    "href": "Analysis1.html#multiple-linear-regression-with-linear-and-cubic-splines",
    "title": "Analysis1",
    "section": "Multiple Linear Regression With Linear and Cubic Splines",
    "text": "Multiple Linear Regression With Linear and Cubic Splines\n\n# Linear Spline\nnepalantro$age_c &lt;- nepalantro$age - 6\nnepalantro$age_sp6 &lt;- ifelse(nepalantro$age &gt; 6, nepalantro$age - 6, 0)\nnepalantro$age_sp12 &lt;- ifelse(nepalantro$age &gt; 12, nepalantro$age - 12, 0)\nmlr1 &lt;- lm(wt ~ age_c + age_sp6 + age_sp12, data = nepalantro)\n\n# Cubic Regression Spline\nnepalantro$age_2 &lt;- (nepalantro$age - 6)^2 \nnepalantro$age_3 &lt;- (nepalantro$age - 6)^3\nnepalantro$age_cbs &lt;- ifelse(nepalantro$age &gt; 6, (nepalantro$age-6)^3, 0)\nmlr2 &lt;- lm(wt ~ age_c + age_2 + age_3 + age_cbs, data = nepalantro)\n\nd &lt;- data.frame(\n  age = c(nepalantro$age, nepalantro$age), \n  fittedvalues = c(mlr1$fitted.values, mlr2$fitted.values), \n  Spline = c(rep(\"Linear Spline\", nrow(nepalantro)), rep(\"Cubic Spline\", nrow(nepalantro)))\n)\n\nggplot(data=nepalantro,aes(x=age,y=wt)) +\n geom_jitter(alpha=0.7)+theme_bw() +   #geom_jitter plots dots\n geom_line(data=d ,aes(x=age, y=fittedvalues,color=Spline)) +\n labs(x=\"Age(months)\",y=\"Weight(kg)\",title=\"NepaliChildrenStudy\") +\n theme(plot.title=element_text(hjust=0.5)) +\n scale_x_continuous(breaks=seq(0,60,6),limits=c(0,60))+\n scale_color_manual(values=c(\"red\",\"blue\"))"
  },
  {
    "objectID": "Analysis1.html#natural-spline-regression",
    "href": "Analysis1.html#natural-spline-regression",
    "title": "Analysis1",
    "section": "Natural Spline Regression",
    "text": "Natural Spline Regression\nNatural spline is a\n\nmlr3 &lt;- lm(wt ~ ns(age, 3), data = nepalantro)\nd &lt;-data.frame(age=c(d$age,d$age,d$age),\n fittedvalues= c(mlr1$fitted.values,mlr2$fitted.values,mlr3$fitted.values),\n Spline=factor(c(rep(\"LinearSpline\", nrow(nepalantro)), rep(\"CubicSpline\", nrow(nepalantro)), rep(\"NaturalCubicSpline\", nrow(nepalantro))),\n levels= c(\"LinearSpline\",\"CubicSpline\",\"NaturalCubicSpline\")))\n\nggplot(data=nepalantro,aes(x=age,y=wt)) +\n geom_jitter(alpha=0.7) +theme_bw()+\n geom_line(data=d,aes(x=age, y=fittedvalues,color=Spline)) +\n labs(x=\"Age(months)\",y=\"Weight(kg)\",title=\"NepaliChildrenStudy\") +\n theme(plot.title=element_text(hjust=0.5))+\n scale_x_continuous(breaks=seq(0,60,6),limits=c(0,60)) +\n scale_color_manual(values=c(\"blue\",\"red\",\"green\"))\n\n\n\n\n\n\n\n\nCubic Spline and Natural Cubic Spline performs similar. Natural spline with 3 degrees of freedom looks smoother than cubic spline."
  },
  {
    "objectID": "Analysis1.html#selecting-models-comapring-cross-validated-mses",
    "href": "Analysis1.html#selecting-models-comapring-cross-validated-mses",
    "title": "Analysis1",
    "section": "Selecting Models – Comapring Cross-Validated MSEs",
    "text": "Selecting Models – Comapring Cross-Validated MSEs\nModel fitting across models was assessed based on 10 fold cross-validated mean squared error.\n\nset.seed(12345)\nid_rand &lt;- runif(nrow(nepalantro))\nnepalantro$cv_group &lt;- ntile(id_rand, 10)\ncv_error &lt;- matrix(nrow=10,ncol=8)\ncv_error_mlr1 &lt;- numeric(10)                    \ncv_error_mlr2 &lt;- numeric(10)          \nfor (j in 1:10) {\n  test &lt;- nepalantro[nepalantro$cv_group == j, ]\n  train &lt;- nepalantro[nepalantro$cv_group != j, ]\n  for (df in 1:8) {\n    fit_ns &lt;- lm(wt ~ ns(age, df = df), data = train)\n    pred_ns &lt;- predict(fit_ns, test)\n    cv_error[j, df] &lt;- mean((test$wt - pred_ns)^2)\n  }\n  \n  fit_mlr1 &lt;- lm(wt ~ age_c + age_sp6 + age_sp12, data = train)\n  pred_mlr1 &lt;- predict(fit_mlr1, test)\n  cv_error_mlr1[j] &lt;- mean((test$wt - pred_mlr1)^2)\n\n  fit_mlr2 &lt;- lm(wt ~ age_c + age_2 + age_3 + age_cbs, data = train)\n  pred_mlr2 &lt;- predict(fit_mlr2, test)\n  cv_error_mlr2[j] &lt;- mean((test$wt - pred_mlr2)^2)\n}\n\nMSE &lt;- cbind(cv_error, cv_error_mlr1, cv_error_mlr2)\nmean_mse &lt;- apply(MSE, 2, mean)\n\npar(mfrow = c(1, 2), mar = c(4, 4, 3, 1))  \n\nplot(1:8,mean_mse[1:8],ylim=c(1,2.5),xlab=\"DegreesofFreedom\",ylab=\"MSE\",\n main=\"CrossValidatedMSE NaturalSpline\",xaxt=\"n\",pch=17,col=1:8)\n text(1:8, mean_mse[1:8]-0.2,labels=signif(mean_mse[1:8],3),col=1:8)\n axis(1,at=c(1:8),labels=1:8,tick=FALSE)\n \nplot(9:10,mean_mse[9:10],ylim=c(1,2.5),xlab = \"Model\", ylab=\"MSE\",\n main=\"CrossValidatedMSE Regression\",xaxt=\"n\",pch=17,col=9:10)\n text(9:10, mean_mse[9:10]-0.2,labels=signif(mean_mse[9:10],3),col=9:10)\n axis(1,at=c(9:10), labels=c(\"MLR_LinearSpline\", \"MLR_CubicSpline\"),tick=FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCubic spline regression achieved optimal predictive performance (CV-MSE = 1.80). Natural spline with a degrees of freedom of 2 performs comparably well (MSE = 1.83 at df=2). Cubic spline regression results in a 9.1% error reduction over the linear benchmark (MSE = 1.98)"
  }
]